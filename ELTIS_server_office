#ELTIS build

library(shiny)
library(googleVis)

shinyServer(function(input, output) {
  diamonds<- read.csv ("components5.csv")
  MSKdeliver<-read.csv ("MSK deliver.csv")
#  components<-read.csv("components5.csv")
  
  # a large table, reative to input$show_vars
  output$mytable1 <- renderDataTable({
    #library(ggplot2)
    diamonds [, input$show_vars, drop = FALSE]
  })
  
  # sorted columns are colored now because CSS are attached to them
  output$mytable2 <- renderDataTable({
    MSKdeliver
  }, options = list(orderClasses = TRUE))
  
  # customize the length drop-down menu; display 5 rows per page by default
  output$mytable3 <- renderDataTable({
    MSKdeliver
  }, options = list(lengthMenu = c(5, 30, 50), pageLength = 5))
  
  
output$mytable4 <- renderDataTable({
  MSKdeliver
}, options = list(lengthMenu = c(5, 30, 50), pageLength = 50))

  
  
  
  output$plot1 <- renderPlot({
    slices <- c(10, 12, 4, 16, 8) 
    lbls <- c("US", "UK", "Australia", "Germany", "France")
    pct <- round(slices/sum(slices)*100)
    lbls <- paste(lbls, pct) # add percents to labels 
    lbls <- paste(lbls,"%",sep="") # ad % to labels 
    pie(slices,labels = lbls, col=rainbow(length(lbls)),
        main="Pie Chart of Countries")
  })
  
  output$plot2 <- renderPlot({
    slices <- c(20, 22, 4, 36, 8) 
    lbls <- c("US", "UK", "Australia", "Germany", "France")
    pct <- round(slices/sum(slices)*100)
    lbls <- paste(lbls, pct) # add percents to labels 
    lbls <- paste(lbls,"%",sep="") # ad % to labels 
    pie(slices,labels = lbls, col=rainbow(length(lbls)),
        main="Pie Chart of Countries")
  })
  
  output$plot3 <- renderPlot({
    slices <- c(50, 22, 4, 36, 18) 
    lbls <- c("US", "UK", "Australia", "Germany", "France")
    pct <- round(slices/sum(slices)*100)
    lbls <- paste(lbls, pct) # add percents to labels 
    lbls <- paste(lbls,"%",sep="") # ad % to labels 
    pie(slices,labels = lbls, col=rainbow(length(lbls)),
        main="Pie Chart of Countries")
  })
  
  CityPopularity<- read.csv("C:/Documents and Settings/smirnov/РњРѕРё РґРѕРєСѓРјРµРЅС‚С‹/R/win-library/3.1/shiny/examples/Eltis build/payments.csv")
  output$google<-renderGvis({ gvisGauge(CityPopularity, 
                                        options=list(min=0, max=800, greenFrom=500,
                                                     greenTo=800, yellowFrom=300, yellowTo=500,
                                                     redFrom=0, redTo=300, width=200, height=200))
                                                            
  })
  
  goods<-read.csv("C:/Documents and Settings/smirnov/РњРѕРё РґРѕРєСѓРјРµРЅС‚С‹/R/win-library/3.1/shiny/examples/Eltis build/sales.csv")
  output$googleGoods<-renderGvis({ gvisGauge(goods, 
                                        options=list(min=0, max=800, greenFrom=500,
                                                     greenTo=800, yellowFrom=300, yellowTo=500,
                                                     redFrom=0, redTo=300, width=200, height=200))
                              
  })
  
df=data.frame(country=c("Москва", "Санкт-Петербург", "Новосибирск"), 
              факт =c(10,30,40), 
              план =c(23,19,32))

output$googleSales <- renderGvis(gvisBarChart(df))


Bubble <- gvisBubbleChart(df, idvar="Fruit", 
                          xvar="Sales", yvar="Expenses",
                          colorvar="Year", sizevar="Profit",
                          options=list(
                            hAxis='{minValue:75, maxValue:125}'))


output$googleItems <- renderGvis(gvisBubbleChart(df,options=list(
  hAxis='{minValue:0, maxValue:60}', vAxis='{minValue:0, maxValue:50}')))




dat <- data.frame(Room=c("DP400-RDC24","DP5000-KFDC42","VM500-CL", "B-21", "KM100-7.1", 
                         "SC5000-D1", "ELTIS VS1/4-4"),
                  #Language=c("picking", "assembly", "packing"),
                  start=as.POSIXct(c("2014-03-14 14:00", 
                                     "2014-03-14 15:00",
                                     "2014-03-14 14:30",
                                     "2014-03-14 14:30",
                                     "2014-03-14 14:20",
                                     "2014-03-14 16:00",
                                     "2014-03-14 16:30")),
                  end=as.POSIXct(c("2014-03-14 15:00", 
                                   "2014-03-14 16:00",
                                   "2014-03-14 15:30",
                                   "2014-03-14 16:00",
                                   "2014-03-14 15:10",
                                   "2014-03-14 16:45",
                                   "2014-03-14 19:00")))
output$googleGantt <- renderGvis(
  gvisTimeline(data=dat, 
               rowlabel="Room", #barlabel="Language", 
               start="start", end="end", options=list(width=600, height=450, fontSize=9
               )))


  
})


