library(readxl)
library(readr)
library(stringr)
library (reshape2)
library (Rcpp)


##
##загружаем данные по остаткам на всех складах
##
allStock<-read_excel("C:/Documents and Settings/smirnov/Мои документы/Максим/R план/all stock.xls")
#заменить NA на ноль
allStock[is.na(allStock)]<-0

header<-allStock[1,]


#обработать содержимое для получения цифр
write.csv(allStock, "C:/Documents and Settings/smirnov/Мои документы/Максим/R план/all stock.сsv")

sat<-read.csv("C:/Documents and Settings/smirnov/Мои документы/Максим/R план/all stock.сsv", 
              , skip=1, na.strings=c(" ", NA), stringsAsFactors=FALSE) 

write.csv(sat, "C:/Documents and Settings/smirnov/Мои документы/Максим/R план/all stock.сsv")

sat2<-read_csv("C:/Documents and Settings/smirnov/Мои документы/Максим/R план/all stock.сsv", 
               skip=2) 
#добавить заголовки стобцов
names(sat2)<-c(0,0,header)

#получить номер колонки заданного склада
warehouseStock<-match("Склад ПКИ и материалы", colnames(sat2))
stockComponents<-sat2[,c(4,6,warehouseStock)]
names(stockComponents)<-c("code", "item")

stockComponents[is.na(stockComponents)]<-0


##
## конец блока загрузки данных по остаткам



#парсинг даты отчета по остаткам
date<-names(allStock)[1]
library(stringr)
dateReport<-str_sub(date, start= -8)

weekReport<-round(as.numeric(
  difftime(strptime(dateReport, format = "%d.%m.%y"),
           strptime("01.01.2015", format = "%d.%m.%Y"), units="weeks") +1), digits=0)

#присвоили номер недели текущим остаткам
names(stockComponents)[3]<-weekReport




# загружаем таблицу с полным ассортиментом, который держим на контроле и параметрами (срок доставки, страховой запас и проч.)
param<-read_excel("C:/Documents and Settings/smirnov/Мои документы/Максим/R план/stockFlowParameters.xls")

names(param)<-c("code", "item", "MOQ", "safety stock", "lead time", "order quantity")

# names(weeklySales)<-c("code","items", c("1":"52"))

#создать таблицу с полным ассортиментом и 52-неделями пустых значений
#сделать сводную таблицу, включив остатки по текущей неделе 
#(ежнедельно догружать остатки в имеющуюся таблицу)
currentStock<-as.data.frame(matrix(nrow=nrow(param), ncol=54))
currentStock[,1:2]<-param[,1:2]
names(currentStock)<-c("code", "item", c(1:52))

#получаем таблицу с еженедельными остатками и для текущей недели обновляем данные
weeklyStock<-merge(currentStock, stockComponents, by ="code", all.x= TRUE)

# вставить блок с парсингом типа "17.y"
# затем подать получившуюся матрицу на вход Rcpp блока



nam<-colnames(stockComponents) # номера недель, где есть заказы
nam2<-colnames(weeklyStock) # все идентификаторы недель, после объединения таблиц
difnames<-paste(nam, ".x", sep ="") [3]
difnames2<-paste(nam, ".y", sep ="") [3]

len<-length(weeklyStock) # 

colindex<-match(difnames,nam2) # поиск номеров колонок в 52-недельной матрице, совмещенной с матрцие заказов, которые совпали с матрицей заказов
colindex2<-match(difnames2,nam2) # поиск номеров колонок в матрцие заказов, которые совпали неделями заказов



#присваиваем значения размещенных заказов общей таблице, включающей понедельный план
weeklyStock[,colindex]<-weeklyStock[,colindex2]

names(weeklyStock)<-c("code","item", c("1":"52"))
weeklyStock[is.na(weeklyStock)]<-0 # получили таблицу с остатком на текущей неделе в 52-недельной матрице
stockAtHand<-as.matrix(weeklyStock[,3:54]) # матрица с остатками для передачи в RCPP




















##
## получаем 52-недельную матрицу с размещенными заказами на каждой неделе (ТОВАРЫ В ПУТИ)
##
rat<-read_excel("C:/Documents and Settings/smirnov/Мои документы/Максим/R план/goodsTransit2.xls",skip=2, col_names = FALSE)
nr<-nrow(rat)

for (m in 2:nr)
{rat[m,14]<-as.numeric(rat[m,6])
}


code<-regexpr(']',rat[,5])
rat$code<-substr(rat[,5], 2, code-1)
rat$orderDate<-str_sub(rat[,8], start= -8)

rat$orderWeek<-round(as.numeric(
  difftime(strptime(rat$orderDate, format = "%d.%m.%y"),
           strptime("01.01.2015", format = "%d.%m.%Y"), units="weeks") +1), digits=0)

wTable<-subset(rat, select=c( 15, 5,  17, 14))


names(wTable)<-c("code", "item", "orderWeek", "quantity")

# получаем таблицу план-график размещенных заказов
resTable<-dcast(wTable, item ~ orderWeek, fun.aggregate=sum)
# добавляем колонку с кодом
code<-regexpr(']',resTable[,1])
resTable$code<-substr(resTable[,1], 2, code-1)



# # создаем пустую таблицу
# calendf<-as.data.frame(matrix(nrow=154, ncol=52))
# 
# 
# names(calendf)<-c("1":"52")
# 
# calendf[6:154,1]<-resTable[6:154,1]
# names(calendf)<-c("item", c("1":"51"))
# 
# # сводная таблица для обеспечения размщения заказов в 52-недельной матрице
# all<-merge(calendf, resTable, by = "item", all = TRUE)





# code<-regexpr(']',all[,1])
# all$code<-substr(all[,1], 2, code-1)


weeklyOrders<-merge(currentStock, resTable, by ="code", all.x= TRUE)

nam<-colnames(resTable) # номера недель, где есть заказы
nam2<-colnames(weeklyOrders) # все идентификаторы недель, после объединения таблиц
difnames<-paste(nam, ".x", sep ="") 
difnames2<-paste(nam, ".y", sep ="") 

len<-length(nam) # 

colindex<-match(difnames,nam2)[4:len-2] # поиск номеров колонок в 52-недельной матрице, совмещенной с матрцие заказов, которые совпали с матрицей заказов
colindex2<-match(difnames2,nam2)[4:len-2] # поиск немеров колонок в матрице заказов, которые совпали неделями заказов



#присваиваем значения размещенных заказов общей таблице, включающей понедельный план
weeklyOrders[,colindex]<-weeklyOrders[,colindex2]

names(weeklyOrders)<-c("code","items", c("1":"52"))
weeklyOrders[is.na(weeklyOrders)]<-0


##
## получаем 3 таблицы: остатки, заказы, потребление в размерности на 52 недели
##
weeklyStock<-weeklyStock[,1:54]
weeklyOrders<-weeklyOrders[,1:54]

weeklySales<-read_excel("C:/Documents and Settings/smirnov/Мои документы/Максим/R план/weeklySales.xls")
 names(weeklySales)<-c("code","items", c("1":"52"))

# загрузка в другом формате
# weeklySales<-read.csv("C:/Documents and Settings/smirnov/Мои документы/Максим/R план/weeklySales.csv", sep =";") 
# names(weeklySales)<-c("code","items", c("1":"52"))

currentStock[,1:2]<-weeklyStock[,1:2]
weeklySales2<-merge(currentStock, weeklySales, by ="code", all.x= TRUE)
colnames(weeklySales2)<-c("code", "items", "1":"52")

weeklySales2[,3:54]<-weeklySales2[,56:107] 
weeklySales2<- weeklySales2[,1:54]

#сортируем параметры товародвижения в установленном порядке
parameters<-merge(currentStock, param, by ="code", all.x= TRUE)

 # получили 4 матрицы для передачи в RCPP
StockMatrix<-as.matrix(weeklyStock[,3:54])
OrdersMatrix<-as.matrix(weeklyOrders[,3:54])
SalesMatrix<-as.matrix(weeklySales2[,3:54])
ParametersMatrix<-as.matrix(parameters[,c(57,59,58)])




# write.csv(weeklyStock, "C:/Documents and Settings/smirnov/Мои документы/Максим/R план/Полученные таблицы для расчетов/weeklyStock.csv")
# 
# write.csv(weeklyOrders, "C:/Documents and Settings/smirnov/Мои документы/Максим/R план/Полученные таблицы для расчетов/weeklyOrders.csv")
# 
# write.csv(weeklySales2, "C:/Documents and Settings/smirnov/Мои документы/Максим/R план/Полученные таблицы для расчетов/weeklySales.csv")
# 

# 4 таблица
# param - data frame  со всеми параметрами (срок доставки, страховой запас, количество в заказе)









# RCPP


# функция на C++, которой аргументами передаются
# матрицы, каждая из которых включает весь перечень позиций в одинаковом порядке
# матрица x - остатки по неделям (прошлые фактические и расчетные)
# матрица y - потребление по неделям
# матрица z - товары в пути по неделям (из отчета по счетам, по которым не получен товар)
# матрица p - параметры (в неделях): срок доставки, страховой запас, размер заказа



k <- matrix(50, 10,50)
m <- matrix(20, 10,50)

m [,28:35]<-c(20,30,50,100,10,60,30,44,67, 57)
m [,28:35]<-90

placedOrders<-matrix(10, 10,50)
placedOrders[,c(5:10, 12:18, 25:28)]<-0
placedOrders[,36]<-100

# нумерация стоблцов при передаче в RCPP начинается с нуля !!!
# 0-я колонка страховой запас
# 1-я колонка размер заказа
# 2-я колонка время в пути

parameters<-matrix(4, 10,3)
parameters[,1]<-4
parameters[,2]<-2
parameters[,3]<-2

#расчет номера текущей недели
date()
u<-Sys.Date()


time<-round(as.numeric(
  difftime(strptime(u, format = "%Y-%m-%d"),
           strptime("01.01.2015", format = "%d.%m.%Y"), units="weeks") +1), digits=0)-2

# РґР°РЅРЅС‹Рµ РЅР° 20-СЋ РЅРµРґРµР»СЋ
k[,20]<-c(30,50,10,200,40,150,0,80,20,114)
m [,20:22] <- c(150,10,10,0,40,100,0,80,20,114)


cppFunction('NumericMatrix stockTurnover(NumericMatrix x, NumericMatrix y, NumericMatrix z, NumericMatrix p, int t) {
            int nrow = x.nrow(), ncol = x.ncol();
            
            NumericMatrix out(nrow*3, ncol);
            
            
            
            for (int i = 0; i < nrow; i++) {         // проход по рядам
            
            for (int j = t+2; j < 50; j++) {           // проход по колонкам в ряду (начинаем с недели, следующей за текущей)
            out (i,t+1)=x (i,t+1);                            // создали начальные остатки по рядам
            
            out (i+2*nrow, j) = z(i,j);             // включаем блок с товарами в пути (нижняя треть таблицы)
            
            out (i,j) = out(i, j-1)-y(i,j)+z(i,j)+out(i+nrow,j-p(i,2)); // результирующее значение по остаткам на начало недели
            //вычитаем расход за предыдущую неделю и добавляем сгенерированный заказ на lead time недель ранее
            // также добавляем товары в пути, которые поступают на текущей неделе
            //p(i,2) 5-я колонка в таблице параметров срок доставки
            
            
            if (out(i,j) < p(i,0)*y(i,j) && j> t) {       //триггер "заказ"-"нет заказа"; p(i,3)  4-я колонка страховой запас в неделях (нумерация колонок с нуля)
            out (i+nrow,j)= p(i,1)*y(i,j);                //генерирование величины заказа в зависимости от плана продаж; p(i,4) 5-я колонка размер заказа
            }
            else {
            out (i+nrow,j) =0;                // значение "0", если остаток не меньше "страхового" запаса
            
            }
            }                                       // конец обхода колонок
            
            }                                       // конец обхода рядов
            
            
            
            for (int i = 0; i < nrow; i++) {         // проход по рядам НОВЫй ЦИКЛ
            
            for (int j = t+1; j < 50; j++) {           // проход по колонкам в ряду для смещения сгенерированного заказа (t+1) !!
            //на более ранний срок равный "сроку доставки"
            
            out (i+nrow,j) = out(i+nrow, j+(p(i,2)-1)); //  "p(i,2)" уменьшить еще на ЕДИНИЦУ?
            out (i,j+1) = out(i, j-1)-y(i,j)+z(i,j)+out(i+nrow,j-p(i,2));  // добавить в левой части уравнения  out (...j+1), чтобы сохранить превоначальные остатки
            
            }
            
            }
            
            for (int r = t+2; r < ncol; r++) {         // ДОБАВЛЕННЫЙ ЦИКЛ проход по КОЛИЧЕСТВУ КОЛОНОК !!
            
            for (int i = 0; i < nrow; i++) {
            
            for (int j = t+2; j < 50; j++) {          // !!
            
            if (out(i,j+p(i,2)-1) < p(i,0)*y(i,j) && j> t+1 ) {                       //обнуление "лишних заказов"
            out (i+nrow,j)= p(i,1)*y(i,j);
            }
            else {
            out (i+nrow,j) =0;
            
            }
            out (i,j) = out(i, j-1)-y(i,j)+z(i,j)+out(i+nrow,j-p(i,2));
            
            }                                       // конец обхода колонок
            
            
            }                                       // конец обхода рядов
            
            
            } //ДОБАВЛЕННЫЙ ЦИКЛ
            
            
            return out;                             // возврат вектора значений по всем рядам
            
            }')

#rat<-stockTurnover(k,m,placedOrders, parameters, time)



rat<-stockTurnover(StockMatrix,SalesMatrix,OrdersMatrix, ParametersMatrix, time)
NamesMatrix<-as.data.frame(matrix(nrow=nrow(rat), ncol=2))
NamesMatrix<- weeklyStock[rep(row.names(weeklyStock), 3), 1:2]

statusMatrix<-as.data.frame(matrix(nrow=nrow(rat), ncol=1))
statusMatrix[1:nrow(rat)/3, ]<-"остатки"
statusMatrix[nrow(rat)/3+1:nrow(rat)/3*2, ]<-"заказы"
statusMatrix[(nrow(rat)/3*2+1):nrow(rat), ]<- "в пути"



report<-cbind(NamesMatrix,statusMatrix, rat)
write.csv(report, "C:/Documents and Settings/smirnov/Мои документы/Максим/R план/Полученные таблицы для расчетов/report.csv")
